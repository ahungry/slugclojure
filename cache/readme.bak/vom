<h1>Vom - A tiny logging library for Common Lisp</h1>

<p>Vom is a logging library for lisp. It&apos;s goal is to be useful and small. It does
not provide a lot of features as other loggers do, but has a small codebase
that&apos;s easy to understand and use.</p>

<h2>Documentation</h2>

<p>Logging is done by calling one of the logging macros:</p>

<ul>
<li>emerg</li>
<li>alert</li>
<li>crit</li>
<li>error</li>
<li>warn</li>
<li>notice</li>
<li>info</li>
<li>debug</li>
<li>debug1</li>
<li>debug2</li>
<li>debug3</li>
<li>debug4</li>
</ul>

<p>Each of these is a macro defined as such:</p>

<pre><code><span class="code"><span class="paren1">(<span class="code"><i><span class="symbol">defmacro</span></i> notice <span class="paren2">(<span class="code">format-str &amp;rest args</span>)</span> ...</span>)</span></span></code></pre>

<p>They are used almost exactly like <code>format</code> (but without specifying the stream):</p>

<pre><code><span class="code"><span class="paren1">(<span class="code">vom:error <span class="string">"there was a problem setting up your database: ~a"</span> error</span>)</span></span></code></pre>

<h3>Configuration</h3>

<p>You can set a global logging level:</p>

<pre><code><span class="code"><span class="comment">;; set the default loglevel such that only errors (or higher) get logged
</span><span class="paren1">(<span class="code">vom:config t <span class="keyword">:error</span></span>)</span></span></code></pre>

<p>or you can set per-package loglevels:</p>

<pre><code><span class="code"><span class="paren1">(<span class="code">vom:config <span class="keyword">:my-package</span> <span class="keyword">:notice</span></span>)</span></span></code></pre>

<p>In the above examples, any unconfigured package will have the loglevel of
<code>:error</code>, but the package <code>my-package</code> will log anything that&apos;s a <code>:notice</code> or
above.</p>

<h3>*log-stream*</h3>

<p>The stream that vom logs to by default. This defaults to <code>t</code> (aka
<code>*standard-output*</code>)</p>

<h3>*log-hook*</h3>

<p>This is a function of 3 arguments that takes a log level, a package keyword
name, and that package&apos;s configured log level and returns one or more streams as
multiple values that the log entry will be logged to:</p>

<pre><code><span class="code"><span class="comment">;; example: this hook logs the request to multiple streams if we're getting a
</span><span class="comment">;; log entry from the "particle-accelerator" package
</span><span class="paren1">(<span class="code">setf <span class="special">vom:*log-hook*</span>
  <span class="paren2">(<span class="code"><i><span class="symbol">lambda</span></i> <span class="paren3">(<span class="code">level package package-level</span>)</span>
    <span class="paren3">(<span class="code">declare <span class="paren4">(<span class="code">ignore level package-level</span>)</span></span>)</span>
    <span class="paren3">(<span class="code"><i><span class="symbol">if</span></i> <span class="paren4">(<span class="code">eq package <span class="keyword">:particle-accelerator</span></span>)</span>
        <span class="paren4">(<span class="code">values t <span class="special">*my-file-log-stream*</span> <span class="special">*another-stream*</span></span>)</span>
        t</span>)</span></span>)</span></span>)</span></span></code></pre>

<h2>License</h2>

<p>MIT. Do what you want with it. Just give me credit. Or I&apos;ll come to your house
for two weeks and eat your food and sleep on your couch and use your toothbrush.</p>
