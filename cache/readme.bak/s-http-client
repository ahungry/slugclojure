<h1>S-HTTP-CLIENT</h1>

<h2>A Common Lisp HTTP Client</h2>

<p><code>S-HTTP-CLIENT</code> is a
basic implementation of a Common Lisp HTTP Client. This simple package
is used as a building block in a number of other open source projects.</p>

<h3>Contents</h3>

<ul>
<li><a href="#features" >Features</a></li>
<li><a href="#status" >Status</a></li>
<li><a href="#news" >News</a></li>
<li><a href="#platforms" >Platforms</a></li>
<li><a href="#downloading" >Downloading</a></li>
<li><a href="#installation" >Installation</a></li>
<li><a href="#usage" >Usage</a></li>
<li><a href="#api" >API Reference</a></li>
<li><a href="#mailinglist" >Mailinglist</a></li>
<li><a href="#changelog" >Changelog</a></li>
<li><a href="#tod" >TODO</a></li>
<li><a href="#faq" >FAQ</a></li>
<li><a href="#bugs" >Bugs</a></li>
<li><a href="#authors" >Authors</a></li>
<li><a href="#maintainers" >Maintainers</a></li>
<li><a href="#license" >License</a></li>
<li><a href="#history" >History</a></li>
<li><a href="#references" >References</a></li>
</ul>

<h3>Features</h3>

<p><code>S-HTTP-CLIENT</code> can:</p>

<ul>
<li>access any URL over HTTP/HTTPS using any HTTP verb</li>
<li>support connection reuse</li>
<li>support basic authentication</li>
</ul>

<h3>Status</h3>

<p><code>S-HTTP-CLIENT</code> is considered stable code.</p>

<h3>News</h3>

<ul>
<li><em>December 2005</em> - <code>S-HTTP-CLIENT</code> was featured in my first <a href="http://homepage.mac.com/svc/LispMovies/index.html" >Lisp
Movie: Episode 1: HTTP Client and
Server</a> [dead-link].</li>
<li><em>November 2005</em> - Created as a separate project.</li>
</ul>

<h3>Platforms</h3>

<p><code>S-HTTP-CLIENT</code> is written in ANSI standard Common Lisp and should be
portable across any CL implementation, provided parts of <code>S-SYSDEPS</code> are
ported.</p>

<h3>Installation</h3>

<p>The <code>S-HTTP-CLIENT</code> package is loaded using
<a href="http://www.cliki.net/asdf" >ASDF</a>. There is an excellent <a href="http://constantly.at/lisp/asdf/" >tutorial on
ASDF</a> to get you started.</p>

<pre><code>CL-USER 1 &gt; (asdf:oos 'asdf:load-op :s-http-client)
</code></pre>

<p>Example of setting up and using ASDF to compile and load the package</p>

<h3>Usage</h3>

<p>Just call <code>DO-HTTP-REQUEST</code> with the necessary arguments. For example:</p>

<pre><code>CL-USER 1 &gt; (in-package :s-http-client)
#&lt;The S-HTTP-CLIENT package, 59/128 internal, 5/16 external&gt;

S-HTTP-CLIENT 2 &gt; (s-http-client:do-http-request &quot;http://homepage.mac.com/svc/s-http-client/foo.html&quot;)
&quot;&lt;html&gt;
&lt;head&gt;&lt;title&gt;Foo&lt;/title&gt;&lt;/head&gt;
&lt;body&gt;
&lt;h1&gt;Foo&lt;/h1&gt;
&lt;p&gt;Just a test page.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;
&quot;
200
((:DATE . &quot;Sat, 19 Nov 2005 22:05:38 GMT&quot;) 
 (:CONTENT-LENGTH . &quot;100&quot;) 
 (:CONTENT-TYPE . &quot;text/html&quot;) 
 (:CACHE-CONTROL . &quot;public&quot;) 
 (:X-RESPONDING-SERVER . &quot;webdav11&quot;) 
 (:SERVER . &quot;AppleDotMacServer&quot;) 
 (:ETAG . &quot;14djc8on-8nlp-j19yhvvj5-c37cvzcpi0&quot;) 
 (:LAST-MODIFIED . &quot;Sat, 19 Nov 2005 22:02:31 GMT&quot;) 
 (:VIA . &quot;1.1 netcache02 (NetCache NetApp/5.5R6)&quot;))
#&lt;URI http://homepage.mac.com:80/svc/s-http-client/foo.html&gt;
:NEW
</code></pre>

<p>In principle, any HTTP verb is allowed. It is the easiest to specify
them as keywords. In the case of :POST or :PUT, content as well as a
content-type should be specified (content length will be calculated).
Content can be specified as a string or byte sequence as far as
write-sequence can be called on your platforms TCP/IP stream. Basic
authorization is to be specified as (username . password) strings.</p>

<p>Connections are kept alive and reused as long as the same host and port
are accessed using the same scheme. Both HTTP/1.0 with Keep-Alive
headers as well as HTTP/1.1 is supported. Chunked transfer encoding is
also implemented.</p>

<h3>API Reference</h3>

<p>There is automatically generated in documentation
available for the <code>S-HTTP-CLIENT</code> package in <code>doc/API.html</code></p>

<h3>Mailinglist</h3>

<p>There is no mailing list for this project.</p>

<h3>Changelog</h3>

<p>Release Notes:</p>

<ul>
<li>release 1: moved <code>S-HTTP-CLIENT</code> into a seperate project under a new
structure</li>
</ul>

<h3>TODO</h3>

<ul>
<li>Proxy support is currently not implemented, although it is not
really hard.</li>
</ul>

<h3>FAQ</h3>

<p>Nothing appropriate.</p>

<h3>Bugs</h3>

<ul>
<li>HTTPS in only implemented on LispWorks (where it was really easy).</li>
</ul>

<h3>Authors</h3>

<p><code>S-HTTP-CLIENT</code> was written by Sven Van
Caekenberghe.</p>

<h3>Maintainers</h3>

<p><code>S-HTTP-CLIENT</code> is being maintained by Sven Van
Caekenberghe.</p>

<h3>License</h3>

<p>You are granted the rights to distribute and use this software as
governed by the terms of the Lisp Lesser General Public License
(<a href="http://opensource.franz.com/preamble.html" >http://opensource.franz.com/preamble.html</a>),
also known as the LLGPL.</p>

<h3>History</h3>

<p>This is a new project.</p>

<h3>References</h3>

<p>There are no references.</p>

<p>Copyright Â© 2005 Sven Van Caekenberghe, Beta Nine BVBA. All Right
Reserved.</p>
