<h1>sdl2.kit</h1>

<p>This is a utility kit for <code>cl-sdl2</code> that provides something similar to
<code>GLUT</code>.  However, it&apos;s also geared at being useful for &ldquo;real&rdquo;
applications or games.</p>

<p>At the moment, this includes the following functionality:</p>

<ul>
<li>A generalized event loop</li>
<li>Managing multiple windows</li>
<li>Managing the rendering loop, including GL</li>
<li>Managing the &ldquo;shader dictionary&rdquo;: compiling shaders, linking
  programs, outputting errors, activating programs, and setting
  uniforms by name.</li>
</ul>

<p>For an example, see <code>examples/sdl2kit.lisp</code>.</p>

<h2>Windows</h2>

<p>To make a new window, you simply create a subclass of <code>WINDOW</code> or
<code>GL-WINDOW</code>, and implement the <code>WINDOW</code> protocol.  You should
primarily specialize on <code>WINDOW</code>:</p>

<ul>
<li><code>window-event WINDOW TYPE TIMESTAMP DATA1 DATA2</code>:  Handle a WM event
  (see the SDL2 documentation for parameters)</li>
<li><code>mousebutton-event WINDOW STATE TIMESTAMP BUTTON X Y</code></li>
<li><code>mousemotion-event WINDOW TIMESTAMP X Y</code></li>
<li><code>textinput-event WINDOW TIMESTAMP TEXT</code></li>
<li><code>keyboard-event WINDOW STATE TIMESTAMP REPEAT-P KEYSYM</code></li>
<li><code>other-event WINDOW EVENT</code>: Other events not implemented yet</li>
<li><code>render WINDOW</code></li>
<li><code>close-window WINDOW</code>:  Close the window.  If you add a method to this, the window will not be closed unless you <code>CALL-NEXT-METHOD</code>.  This may be useful!</li>
</ul>

<p><strong>NOTE:</strong> <code>INITIALIZE-INSTANCE</code> requires you <code>CALL-NEXT-METHOD</code> first,
or simply define your method as <code>:AFTER</code>.  (This is due to method ordering being most-specific-first.)</p>

<p>Of these, you should only call <code>RENDER</code> or <code>CLOSE-WINDOW</code> from user
code.  However, these can be called from <em>any</em> thread safely.</p>

<p>By default, windows do not render continuously, but only when <code>RENDER</code>
is called, or when an expose event is received.  You may do the
following to enable idle rendering:</p>

<pre><code><span class="code"><span class="paren1">(<span class="code">setf <span class="paren2">(<span class="code">idle-render WINDOW</span>)</span> t</span>)</span></span></code></pre>

<p>You may do this at any time, and also set it to <code>NIL</code> to disable idle
rendering.</p>

<h2>Shaders</h2>

<p>Shader dictionary support in <code>sdl2kit</code> is <strong>deprecated</strong>.  This has
been moved to <a href="https://github.com/lispgames/glkit" >glkit</a>.</p>
