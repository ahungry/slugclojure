<h1>LEV</h1>

<p>LEV is <a href="http://software.schmorp.de/pkg/libev.html" >libev</a> bindings for Common Lisp.</p>

<h2>Usage</h2>

<pre><code><span class="code"><span class="paren1">(<span class="code">ql:quickload <span class="keyword">:lev</span></span>)</span>

<span class="paren1">(<span class="code"><i><span class="symbol">cffi:defcallback</span></i> stdin-cb <span class="keyword">:void</span> <span class="paren2">(<span class="code"><span class="paren3">(<span class="code">evloop <span class="keyword">:pointer</span></span>)</span> <span class="paren3">(<span class="code">io <span class="keyword">:pointer</span></span>)</span> <span class="paren3">(<span class="code">revents <span class="keyword">:int</span></span>)</span></span>)</span>
  <span class="paren2">(<span class="code">declare <span class="paren3">(<span class="code">ignore revents</span>)</span></span>)</span>
  <span class="paren2">(<span class="code">format t <span class="string">"stdin ready~%"</span></span>)</span>
  <span class="paren2">(<span class="code">lev:ev-io-stop evloop io</span>)</span></span>)</span>

<span class="paren1">(<span class="code"><i><span class="symbol">cffi:defcallback</span></i> timeout-cb <span class="keyword">:void</span> <span class="paren2">(<span class="code"><span class="paren3">(<span class="code">evloop <span class="keyword">:pointer</span></span>)</span> <span class="paren3">(<span class="code">timer <span class="keyword">:pointer</span></span>)</span> <span class="paren3">(<span class="code">revents <span class="keyword">:int</span></span>)</span></span>)</span>
  <span class="paren2">(<span class="code">declare <span class="paren3">(<span class="code">ignore timer revents</span>)</span></span>)</span>
  <span class="paren2">(<span class="code">format t <span class="string">"timeout~%"</span></span>)</span>
  <span class="paren2">(<span class="code">lev:ev-break evloop lev:+EVBREAK-ONE+</span>)</span></span>)</span>

<span class="paren1">(<span class="code"><i><span class="symbol">let</span></i> <span class="paren2">(<span class="code"><span class="paren3">(<span class="code">evloop <span class="paren4">(<span class="code">lev:ev-default-loop 0</span>)</span></span>)</span>
      <span class="paren3">(<span class="code">stdin-watcher <span class="paren4">(<span class="code">cffi:foreign-alloc '<span class="paren5">(<span class="code"><span class="keyword">:struct</span> lev:ev-io</span>)</span></span>)</span></span>)</span>
      <span class="paren3">(<span class="code">timeout-watcher <span class="paren4">(<span class="code">cffi:foreign-alloc '<span class="paren5">(<span class="code"><span class="keyword">:struct</span> lev:ev-timer</span>)</span></span>)</span></span>)</span></span>)</span>
  <span class="paren2">(<span class="code"><i><span class="symbol">unwind-protect</span></i>
      <span class="paren3">(<span class="code"><i><span class="symbol">progn</span></i>
        <span class="comment">;; initialize an io watcher, then start it
</span>        <span class="comment">;; this one will watch for stdin to become readable
</span>        <span class="paren4">(<span class="code">lev:ev-io-init stdin-watcher 'stdin-cb 0 lev:+EV-READ+</span>)</span>
        <span class="paren4">(<span class="code">lev:ev-io-start evloop stdin-watcher</span>)</span>

        <span class="comment">;; initialize a timer watcher, then start it
</span>        <span class="comment">;; simple non-repeating 5.5 second timeout
</span>        <span class="paren4">(<span class="code">lev:ev-timer-init timeout-watcher 'timeout-cb 5.5d0 0d0</span>)</span>
        <span class="paren4">(<span class="code">lev:ev-timer-start evloop timeout-watcher</span>)</span>

        <span class="paren4">(<span class="code">format t <span class="string">"running~%"</span></span>)</span>
        <span class="paren4">(<span class="code">lev:ev-run evloop 0</span>)</span></span>)</span>
    <span class="paren3">(<span class="code">cffi:foreign-free stdin-watcher</span>)</span>
    <span class="paren3">(<span class="code">cffi:foreign-free timeout-watcher</span>)</span></span>)</span></span>)</span></span></code></pre>

<h2>Why not cl-ev?</h2>

<p>We already have <a href="https://github.com/sbryant/cl-ev" >cl-ev</a> for libev bindings, however I found there&apos;s some problems in it.</p>

<ul>
<li>Wrapping with CLOS. It&apos;s bad for performance, obviously</li>
<li>Incomplete API</li>
<li>The author is inactive in Common Lisp world anymore</li>
</ul>

<h2>See Also</h2>

<ul>
<li><a href="http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod" >libev&apos;s documentation</a></li>
</ul>

<h2>Author</h2>

<ul>
<li>Eitaro Fukamachi (e.arrows@gmail.com)</li>
</ul>

<h2>Copyright</h2>

<p>Copyright (c) 2014 Eitaro Fukamachi (e.arrows@gmail.com)</p>

<h2>License</h2>

<p>Licensed under the BSD 2-Clause License.</p>
