<h1>cl-anonfun</h1>

<p>cl-anonfun is a Common Lisp library that provides a simple anonymous function notation.</p>

<h2>Usage</h2>

<h3>fn</h3>

<pre><code>fn form =&gt; lambda-form
</code></pre>

<p><code>fn</code> macro returns <code>lambda</code> form of anonymous function <code>form</code>. If special symbols starting with <code>%</code> are found in <code>form</code>, its symbols will be placed to lambda-list of <code>lambda</code> form. Special symbol <code>%</code> represents its first argument. Special symbol formed <code>%&lt;n&gt;</code> represents its <code>n</code>&apos;th argument. Special symbol <code>%&amp;</code> represents its rest of arguments.</p>

<h4>Examples</h4>

<pre><code>(macroexpand '(fn (* % %)))
; =&gt; #'(LAMBDA (%) (* % %))

(funcall (fn (* % %)) 3)
; =&gt; 9

(macroexpand '(fn (mapcar %2 %1)))
; =&gt; #'(LAMBDA (%1 %2) (MAPCAR %2 %1))

(funcall (fn (mapcar %2 %1)) '(1 2 3) (fn (* % %)))
; =&gt; 1 4 9

(macroexpand '(fn (apply #'+ 1 2 3 %&amp;)))
; =&gt; #'(LAMBDA (&amp;REST %&amp;) (APPLY #'+ 1 2 3 %&amp;))

(funcall (fn (apply #'+ 1 2 3 %&amp;)) 4 5)
; =&gt; 15
</code></pre>

<h3>fnn</h3>

<pre><code>fnn narg form =&gt; lambda-form
</code></pre>

<p>Like <code>fn</code> except that <code>fnn</code> macro can take the number of arguments of the anonymous function.</p>

<h4>Examples</h4>

<pre><code>(macroexpand '(fnn 3 (eq %2 1)))
; =&gt; #'(LAMBDA (#:IGNORE_1_846 %2 #:IGNORE_3_847)
         (DECLARE (IGNORE #:IGNORE_1_846 #:IGNORE_3_847))
         (EQ %2 1))

(funcall (fnn 3 (eq %2 1)) 3 1 2)
; =&gt; T
</code></pre>

<h3>enable-fn-syntax</h3>

<pre><code>enable-fn-syntax
</code></pre>

<p>By calling this function, you can use special syntax <code>#%(...)</code> instead of <code>fn</code> macro. Any forms of <code>fn</code> macro can be used. If an integer is suppied after <code>#%</code>, <code>fnn</code> macro will be used with the integer instead of <code>fn</code>.</p>

<h4>Examples</h4>

<pre><code>(enable-fn-syntax)
(funcall #%(* % %) 3)
; =&gt; 9

(funcall #%3(eq %2 1) 3 1 2)
; =&gt; T
</code></pre>

<h2>License</h2>

<p>Copyright (C) 2011  Tomohiro Matsuyama &lt;<a href="m&#x61;&#105;l&#x74;&#111;:&#x74;&#111;m&#x6F;&#64;c&#x78;&#52;a&#x2E;&#111;r&#x67;">m&#x61;&#105;l&#x74;&#111;:&#x74;&#111;m&#x6F;&#64;c&#x78;&#52;a&#x2E;&#111;r&#x67;</a>&gt;.
Licensed under the LLGPL License.</p>
